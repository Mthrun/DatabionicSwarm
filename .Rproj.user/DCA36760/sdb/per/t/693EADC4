{
    "collab_server" : "",
    "contents" : "\\name{DBSclustering}\n\\alias{DBSclustering}\n\\title{\nDatabonic swarm clustering (DBS)\n}\n\\description{\nAutomated Clustering approach of the Databonic swarm with abstact U distances, which\nare the geodesic distances based on high-dimensional distances combined with low dimensional graph paths by using \\code{ShortestGraphPathsC}.\n}\n\\usage{\nDBSclustering(k, DataOrDistance, BestMatches, LC, StructureType = TRUE, PlotIt = FALSE,\n                 method = \"euclidean\")\n}\n%- maybe also 'usage' for other objects documented here.\n\\arguments{\n  \\item{k}{number of clusters, how many to you see in the topographic map (3D landscape)?}\n  \\item{DataOrDistance}{ Either [1:n,1:d] Matrix of Data (n cases, d dimensions) that will be used. One DataPoint per row\n  \n  or symmetric Distance matrix [1:n,1:n]}\n  \\item{BestMatches}{[1:n,1:2] Matrix with positions of Bestmatches=ProjectedPoints, one matrix line per data point}\n  \\item{LC}{grid size c(Lines,Columns)}\n  \\item{StructureType}{Optional, bool; =TRUE: compact structure of clusters assumed, =FALSE: connected structure of clusters assumed. For the two options vor Clusters, see [Thrun, 2017] or Handl et al. 2006}\n  \\item{PlotIt}{Optional, bool, Plots Dendrogramm}\n  \\item{method}{Optional, one of 39 distance methods of \\code{parDist} of package parallelDist,  if Data matrix is chosen above}\n}\n\\details{\n DBS is a flexible and robust clustering framework that consists\n of three independent modules. The first module is the parameter-free\n projection method Pswarm \\code{\\link{Pswarm}}, which exploits the concepts of self-organization\n and emergence, game theory, swarm intelligence and symmetry considerations. \n The second module is a parameter-free high-dimensional data visualization technique, \n which generates projected points on a topographic map with hypsometric colors \\code{\\link{GeneratePswarmVisualization}}, \n called the generalized U-matrix. The third module is a clustering method with no \n sensitive parameters \\code{\\link{DBSclustering}} (see [Thrun, 2018, p. 104 ff]). The clustering can be verified by the visualization and vice versa. \n The term DBS refers to the method as a whole. \n}\n\\value{\nCls                 [1:n] vector with selected classes of the bestmatches. You can use \\code{plotTopographicMap(Umatrix,Bestmatches,Cls)} for verification.\n}\n\\references{\n[Thrun, 2018]  Thrun, M. C.: Projection Based Clustering through Self-Organization and Swarm Intelligence, doctoral dissertation 2017, Springer, Heidelberg, ISBN: 978-3-658-20539-3, \\url{https://doi.org/10.1007/978-3-658-20540-9}, 2018. \n\n}\n\\author{\nMichael Thrun\n}\n\\note{\nIf you used pswarm with distance matrix instead of a data matrix you may transform your distances into data by using \\code{MDS} of the ProjectionBasedClustering package. The correct dimension can be found through the Sheppard diagram or kruskals stress.\n\nOften it is better to mark the outliers  manually after the prozess of clustering and sometimes a clustering can be improved through human interaction [Thrun/Ultsch,2017] <DOI:10.13140/RG.2.2.13124.53124>; use in this case the visualization \\code{plotTopographicMap} of the package GeneralizedUmatrix. If you would like to mark the outliers interactivly in the visualization use the Umatrix package in \\url{https://www.uni-marburg.de/fb12/datenbionik/software-en}\nor the function \\code{interactiveClustering()} of the ProjectionBasedClustering package on CRAN.\n\n If you want to verifiy your clustering result externally, you can use \\code{Heatmap} or \\code{SilhouettePlot} of the CRAN package \\code{DataVisualizations}.\n}\n\\examples{\ndata(\"Lsun3D\")\nData=Lsun3D$Data\nInputDistances=as.matrix(dist(Data))\n\\donttest{\nprojection=Pswarm(InputDistances)\n#autmatic Clustering without GeneralizedUmatrix visualization\nCls=DBSclustering(k=3, Data, \n\nprojection$ProjectedPoints, projection$LC,PlotIt=TRUE)\n}\n\\dontrun{\nvisualization=GeneratePswarmVisualization(Data,\n\nprojection$ProjectedPoints,projection$LC)\n## Sometimes an automatic Clustering can be improved \n## thorugh an interactive approach, \n## e.g. if Outliers exist (see [Thrun/Ultsch, 2017])\nlibrary(ProjectionBasedClustering)\nCls2=ProjectionBasedClustering::interactiveClustering(visualization$Umatrix, \nvisualization$Bestmatches, Cls)\n}\n\\dontshow{\ndata2=matrix(runif(n = 100),10,10)\ndistance=as.matrix(dist(data2))\nres2=Pswarm(distance,LC = c(10,12))\nCls=DBSclustering(k=2, data2, \n\nres2$ProjectedPoints, res2$LC,PlotIt=FALSE)\n}\n\n}\n\\keyword{swarm}\n\\keyword{cluster analysis}\n\\keyword{Databonic swarm}\n\\keyword{clustering}% __ONLY ONE__ keyword per line\n\\keyword{cluster analysis}% __ONLY ONE__ keyword per line\n\\keyword{cluster}% __ONLY ONE__ keyword per line",
    "created" : 1525275821182.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2333822664",
    "id" : "693EADC4",
    "lastKnownWriteTime" : 1525275960,
    "last_content_update" : 1525275960149,
    "path" : "D:/Subversion/PUB/dbt/DataBionicSwarm/man/DBSclustering.Rd",
    "project_path" : "man/DBSclustering.Rd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_doc"
}